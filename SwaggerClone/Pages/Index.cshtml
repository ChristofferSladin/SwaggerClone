@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="main-container text-center">
    <h1 class="display-4 title">Swagger Clone</h1>

    <form method="post" asp-page-handler="FetchApi" novalidate>
        <div class="api-field-container">
            <div class="input-container">
                <input required id="input" name="Endpoint" type="text">
                <label class="label" for="input">Endpoint</label>
                <div class="underline"></div>
                <div class="sideline"></div>
                <div class="upperline"></div>
                <div class="line"></div>
            </div>
            <button class="fetch-btn" type="submit" asp-page-handler="Get">Fetch</button>

        </div>

        <hr class="divider" />

        <div class="options">
            <label for="formatJson">
                JSON Format
                <input type="checkbox" id="formatJson" class="input" name="FormatJson" checked="@Model.FormatJson">
                <span class="custom-checkbox"></span>
            </label>
        </div>
    </form>

    <div class="response-container">
        @if (!string.IsNullOrEmpty(Model.ApiResponse))
        {
            <pre class="response-display">@Html.Raw(Model.ApiResponse)</pre>
        }
        else
        {
            <div class="response-empty">No response data to display.</div>
        }
    </div>

    <div class="options">
        <form method="post" asp-page-handler="Reset">
            <button class="fetch-btn" type="submit">Reset</button>
        </form>
    </div>

    <hr class="divider" />


    <h2>Extended API Interaction</h2>

    <form method="post" novalidate>
        <div class="api-field-container">
            <div class="input-container">
                <input required id="endpointInput" name="Endpoint" type="text" value="@Model.Endpoint">
                <label class="label" for="endpointInput">Endpoint</label>
            </div>

            <!-- Additional Data for POST/PUT Requests -->
            <textarea class="response-container" id="jsonPayload" name="JsonPayload">@Model.JsonPayload</textarea>
            <label for="jsonPayload">Request Data (JSON)</label>

            <!-- Action Buttons for Different HTTP Methods -->
            <button class="fetch-btn" type="submit" asp-page-handler="Post">POST</button>
            <button class="fetch-btn" type="submit" asp-page-handler="Put">PUT</button>
            <button class="fetch-btn" type="submit" asp-page-handler="Delete">DELETE</button>
        </div>
    </form>
</div>

